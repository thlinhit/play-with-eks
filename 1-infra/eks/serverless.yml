service: ${self:custom.servicePrefix}-eks
frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  servicePrefix: thlinh

provider:
  stage: local
  region: us-east-1
  name: aws

#############
# RESOURCES #
#############
resources:
  Parameters:
    EKSVersion:
      Type: String
      Default: 1.26
    SubnetOne:
      Type: String
      Default: ${param:subnetOne}
    SubnetTwo:
      Type: String
      Default: ${param:subnetTwo}
    SubnetThree:
      Type: String
      Default: ${param:subnetThree}
    InfrastructureBaseSecurityGroup:
      Type: String
      Default: ${param:infrastructureBaseSecurityGroup}
    ManagedSgTxToolingBaseSecurityGroup:
      Type: String
      Default: ${param:managedSgTxToolingBaseSecurityGroup}
    AmazonLinuxAMIID: # retreived from the SSM Parameter Store in the current region
      Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
      Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64
  Resources:
    EksKubernetesServiceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: EksKubernetesServiceRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - eks.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/AmazonEKSClusterPolicy'
          - 'arn:aws:iam::aws:policy/AmazonEKSServicePolicy'

    KubernetesCluster:
      Type: AWS::EKS::Cluster
      Properties:
        Name: ${self:service}-${self:provider.stage}-eks
        ResourcesVpcConfig:
          SecurityGroupIds:
            - !Ref InfrastructureBaseSecurityGroup
            - !Ref ManagedSgTxToolingBaseSecurityGroup
          SubnetIds:
            - !Ref SubnetOne
            - !Ref SubnetTwo
            - !Ref SubnetThree
        RoleArn: !GetAtt EksKubernetesServiceRole.Arn
        Version: !Ref EKSVersion

    ################
    #  WORKER NODE
    ################
    NodeInstanceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: EKSWorkerNodeInstanceRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: "/"
        Policies:
          - PolicyName: node
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - ec2:Describe*
                    - ecr:GetAuthorizationToken
                    - ecr:BatchCheckLayerAvailability
                    - ecr:GetDownloadUrlForLayer
                    - ecr:GetRepositoryPolicy
                    - ecr:DescribeRepositories
                    - ecr:ListImages
                    - ecr:DescribeImages
                    - ecr:BatchGetImage
                  Resource: '*'
          - PolicyName: cni
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - ec2:DescribeNetworkInterfaces
                    - ec2:DescribeInstances
                    - ec2:AttachNetworkInterface
                    - ec2:CreateNetworkInterface
                    - ec2:DeleteNetworkInterface
                    - ec2:DetachNetworkInterface
                    - ec2:ModifyNetworkInterfaceAttribute
                    - ec2:AssignPrivateIpAddresses
                    - ec2:CreateTags
                    - tag:TagResources
                  Resource: '*'
          - PolicyName: eks
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - eks:DescribeCluster
                  Resource: '*'
          - PolicyName: s3-management
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                    - s3:GetObject
                    - s3:ListBucket
                    - s3:DeleteObject
                  Resource:
                    - '*' # Recheck
                - Effect: Allow
                  Action:
                    - s3:HeadBucket
                  Resource:
                    - '*'
          - PolicyName: ClusterAutoscaler
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - ec2:DescribeRegions
                    - ec2:DescribeInstances
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - ecr:GetAuthorizationToken
                    - ecr:BatchCheckLayerAvailability
                    - ecr:GetDownloadUrlForLayer
                    - ecr:GetRepositoryPolicy
                    - ecr:DescribeRepositories
                    - ecr:ListImages
                    - ecr:BatchGetImage
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - autoscaling:DescribeAutoScalingGroups
                    - autoscaling:DescribeAutoScalingInstances
                    - autoscaling:DescribeLaunchConfigurations
                    - autoscaling:SetDesiredCapacity
                    - autoscaling:DescribeTags
                    - autoscaling:TerminateInstanceInAutoScalingGroup
                  Resource: '*'

    # we need to describe AWS::IAM::InstanceProfile to provide EKS Nodes with appropriate permissions
    NodeInstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        Path: /
        Roles:
          - !Ref NodeInstanceRole

#  Outputs:
#    EksCluster:
#      Description: EKS Cluster Name
#      Value: !Ref EksCluster