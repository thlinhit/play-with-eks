service: aws-eks-spot-serverless

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  region: us-east-1

functions:
  videoUploadLambdaFunction:
    handler: upload_video.handler
    events:
      - s3:
          bucket: "aws-eks-spot-serverless-dev-uploads"
          events:
            - s3:ObjectCreated:*
  thumbnailUploadLambdaFunction:
    handler: upload_thumbnail.handler
    events:
      - s3:
          bucket: "aws-eks-spot-serverless-dev-thumbnails"
          events:
            - s3:ObjectCreated:*


resources:
  Resources:
    KubernetesClusterVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}
    KubernetesClusterSubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref KubernetesClusterVPC
        CidrBlock: 10.0.0.0/24
        AvailabilityZone: us-east-1a
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}-subnet-a
    KubernetesClusterSubnetB:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref KubernetesClusterVPC
        CidrBlock: 10.0.1.0/24
        AvailabilityZone: us-east-1b
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}-subnet-b
    KubernetesClusterInternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}
    KubernetesClusterInternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref KubernetesClusterVPC
        InternetGatewayId: !Ref KubernetesClusterInternetGateway
    KubernetesClusterInternetGatewayRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref KubernetesClusterVPC
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}
    KubernetesClusterInternetGatewayToInternetRoute:
      Type: AWS::EC2::Route
      DependsOn: KubernetesClusterInternetGateway
      Properties:
        RouteTableId: !Ref KubernetesClusterInternetGatewayRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref KubernetesClusterInternetGateway
    KubernetesClusterSubnetAtoInternetRouteAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref KubernetesClusterInternetGatewayRouteTable
        SubnetId: !Ref KubernetesClusterSubnetA
    KubernetesClusterSubnetBtoInternetRouteAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref KubernetesClusterInternetGatewayRouteTable
        SubnetId: !Ref KubernetesClusterSubnetB